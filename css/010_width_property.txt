The width property in CSS is used to set the width of an element. Just like the height property, the width property can be specified in various units such as pixels (px), percentages (%), viewport width (vw), and more. Here's an overview of how the width property works, along with some examples:

# -------------------------------- Basic Usage ------------------------------- #
Setting Width in Pixels:
CSS:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    /* Sets the width of the element to 300 pixels */
    .element {
        width: 300px;
    }
//////////////////////////////////////////////

Setting Width in Percentages:
1. When you use percentages, the width is calculated relative to the width of the parent element.
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
CSS:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    /* Sets the width of the element to 50% of its parent element's width */
    .element {
        width: 50%;
    }
//////////////////////////////////////////////

Setting Width Using Viewport Units:
1. Viewport units are relative to the size of the viewport (the visible area of the browser). The vw unit is 1% of the viewport width.

CSS:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    /* Sets the width of the element to 100% of the viewport width */
    .element {
        width: 100vw;
    }
//////////////////////////////////////////////

# --------------------------------- Examples: -------------------------------- #
Example 1: Fixed Width
1. In this example, the width is fixed at 200 pixels.
HTML:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Fixed Width Example</title>
        <style>
            .fixed-width {
                width: 200px;
                background-color: lightblue;
            }
        </style>
    </head>
    <body>
        <div class="fixed-width">This div has a fixed width of 200px.</div>
    </body>
    </html>
//////////////////////////////////////////////

Example 2: Percentage Width
1. In this example, the child element's width is set to 50% of the parent element's width.
HTML:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Percentage Width Example</title>
        <style>
            .parent {
                width: 400px;
                background-color: lightcoral;
            }
            .child {
                width: 50%;
                background-color: lightgreen;
            }
        </style>
    </head>
    <body>
        <div class="parent">
            <div class="child">This div has a width of 50% of its parent.</div>
        </div>
    </body>
    </html>
//////////////////////////////////////////////

Example 3: Viewport Width
1. In this example, the element's width is set to 100% of the viewport width.
HTML:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Viewport Width Example</title>
        <style>
            .full-viewport-width {
                width: 100vw;
                background-color: lightgoldenrodyellow;
            }
        </style>
    </head>
    <body>
        <div class="full-viewport-width">This div has a width of 100vw (100% of the viewport width).</div>
    </body>
    </html>
//////////////////////////////////////////////

Notes:
1. Auto Width: When width: auto; is used, the width of the element is determined by its content.
2. Min-width and Max-width: You can also use min-width and max-width properties to set minimum and maximum width constraints for an element.

CSS:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    .element {
        min-width: 100px; /* Minimum width constraint */
        max-width: 500px; /* Maximum width constraint */
    }
//////////////////////////////////////////////

Understanding the width property is crucial for controlling the layout and appearance of elements in your web design. It allows you to create flexible and responsive layouts that adapt to different screen sizes and content.