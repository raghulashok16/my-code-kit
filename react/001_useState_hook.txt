The useState hook is a fundamental part of React's Hooks API that allows you to add state to functional components.Below are different examples showing various ways to use the useState hook in React.

# ------------------------- Example 1: Basic Counter: ------------------------ #
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import React, { useState } from 'react';

function Counter() {
  // Declare a state variable named "count" with initial value 0
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>
        Click me
      </button>
    </div>
  );
}

export default Counter;
//////////////////////////////////////////////

# ------------------ Example 2: Managing Input Field State: ------------------ #
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import React, { useState } from 'react';

function InputField() {
  // Declare a state variable named "inputValue" with initial value ''
  const [inputValue, setInputValue] = useState('');

  return (
    <div>
      <input 
        type="text"
        value={inputValue}
        onChange={(e) => setInputValue(e.target.value)}
      />
      <p>Input Value: {inputValue}</p>
    </div>
  );
}

export default InputField;
//////////////////////////////////////////////

# -------------------- Example 3: Toggling Boolean State: -------------------- #
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import React, { useState } from 'react';

function ToggleComponent() {
  // Declare a state variable named "isVisible" with initial value true
  const [isVisible, setIsVisible] = useState(true);

  return (
    <div>
      <button onClick={() => setIsVisible(!isVisible)}>
        {isVisible ? 'Hide' : 'Show'} Message
      </button>
      {isVisible && <p>This is a toggleable message.</p>}
    </div>
  );
}

export default ToggleComponent;
//////////////////////////////////////////////

# -------------------------- Example 4: Array State: ------------------------- #
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import React, { useState } from 'react';

function ItemList() {
  // Declare a state variable named "items" with initial value as an empty array
  const [items, setItems] = useState([]);
  const [inputValue, setInputValue] = useState('');

  const addItem = () => {
    setItems([...items, inputValue]);
    setInputValue('');
  };

  return (
    <div>
      <input 
        type="text"
        value={inputValue}
        onChange={(e) => setInputValue(e.target.value)}
      />
      <button onClick={addItem}>Add Item</button>
      <ul>
        {items.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
    </div>
  );
}

export default ItemList;
//////////////////////////////////////////////

# ------------------------- Example 5: Object State: ------------------------- #
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import React, { useState } from 'react';

function UserProfile() {
  // Declare a state variable named "user" with initial value as an object
  const [user, setUser] = useState({
    name: 'John Doe',
    age: 30
  });

  const updateName = () => {
    setUser({ ...user, name: 'Jane Doe' });
  };

  const incrementAge = () => {
    setUser({ ...user, age: user.age + 1 });
  };

  return (
    <div>
      <p>Name: {user.name}</p>
      <p>Age: {user.age}</p>
      <button onClick={updateName}>Change Name</button>
      <button onClick={incrementAge}>Increase Age</button>
    </div>
  );
}

export default UserProfile;
//////////////////////////////////////////////

# ------------------- Example 6: Multiple State Variables: ------------------- #
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
import React, { useState } from 'react';

function MultiStateExample() {
  // Declare multiple state variables
  const [name, setName] = useState('John Doe');
  const [age, setAge] = useState(30);
  const [isEmployed, setIsEmployed] = useState(true);

  return (
    <div>
      <p>Name: {name}</p>
      <p>Age: {age}</p>
      <p>Employed: {isEmployed ? 'Yes' : 'No'}</p>
      <button onClick={() => setName('Jane Doe')}>Change Name</button>
      <button onClick={() => setAge(age + 1)}>Increase Age</button>
      <button onClick={() => setIsEmployed(!isEmployed)}>
        Toggle Employment Status
      </button>
    </div>
  );
}

export default MultiStateExample;
//////////////////////////////////////////////
