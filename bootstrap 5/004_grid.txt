Bootstrap 5 provides a comprehensive grid system that allows you to create responsive layouts with ease. The grid system is based on a 12-column layout and includes various classes to control the layout for different screen sizes.

# ---------- Here's a list of the main grid classes in Bootstrap 5: ---------- #

 Container Classes
- `.container`: A responsive fixed-width container.
- `.container-sm`: A responsive fixed-width container that is 100% wide until the `sm` breakpoint.
- `.container-md`: A responsive fixed-width container that is 100% wide until the `md` breakpoint.
- `.container-lg`: A responsive fixed-width container that is 100% wide until the `lg` breakpoint.
- `.container-xl`: A responsive fixed-width container that is 100% wide until the `xl` breakpoint.
- `.container-xxl`: A responsive fixed-width container that is 100% wide until the `xxl` breakpoint.
- `.container-fluid`: A full-width container that spans the entire width of the viewport.

 Row Classes
- `.row`: Creates a horizontal group of columns.

 Column Classes
- `.col`: A flexible column that spans the available space.
- `.col-*`: Classes for specifying the number of columns to span, where `*` is a number from 1 to 12 (e.g., `.col-6`).
- `.col-sm-*`: Classes for specifying the number of columns to span at the `sm` breakpoint and up.
- `.col-md-*`: Classes for specifying the number of columns to span at the `md` breakpoint and up.
- `.col-lg-*`: Classes for specifying the number of columns to span at the `lg` breakpoint and up.
- `.col-xl-*`: Classes for specifying the number of columns to span at the `xl` breakpoint and up.
- `.col-xxl-*`: Classes for specifying the number of columns to span at the `xxl` breakpoint and up.

 Auto-layout Columns
- `.col-auto`: Sizes columns based on the content width.

 Responsive Column Classes
- `.col-sm`: A flexible column for small devices and up.
- `.col-md`: A flexible column for medium devices and up.
- `.col-lg`: A flexible column for large devices and up.
- `.col-xl`: A flexible column for extra-large devices and up.
- `.col-xxl`: A flexible column for extra-extra-large devices and up.

 Offset Classes
- `.offset-*`: Classes for offsetting columns, where `*` is a number from 1 to 12 (e.g., `.offset-3`).
- `.offset-sm-*`: Offset classes for the `sm` breakpoint and up.
- `.offset-md-*`: Offset classes for the `md` breakpoint and up.
- `.offset-lg-*`: Offset classes for the `lg` breakpoint and up.
- `.offset-xl-*`: Offset classes for the `xl` breakpoint and up.
- `.offset-xxl-*`: Offset classes for the `xxl` breakpoint and up.

 Order Classes
- `.order-*`: Classes for controlling the order of columns, where `*` is a number from 0 to 12 (e.g., `.order-1`).
- `.order-sm-*`: Order classes for the `sm` breakpoint and up.
- `.order-md-*`: Order classes for the `md` breakpoint and up.
- `.order-lg-*`: Order classes for the `lg` breakpoint and up.
- `.order-xl-*`: Order classes for the `xl` breakpoint and up.
- `.order-xxl-*`: Order classes for the `xxl` breakpoint and up.
- `.order-first`: Moves the column to the first position.
- `.order-last`: Moves the column to the last position.

 Alignment Classes
- `.align-items-start`: Aligns items to the start of the container.
- `.align-items-center`: Aligns items to the center of the container.
- `.align-items-end`: Aligns items to the end of the container.
- `.align-self-start`: Aligns a single item to the start of the container.
- `.align-self-center`: Aligns a single item to the center of the container.
- `.align-self-end`: Aligns a single item to the end of the container.
- `.justify-content-start`: Justifies content to the start of the container.
- `.justify-content-center`: Justifies content to the center of the container.
- `.justify-content-end`: Justifies content to the end of the container.
- `.justify-content-around`: Justifies content with space around.
- `.justify-content-between`: Justifies content with space between.
- `.justify-content-evenly`: Justifies content with equal space around.

 No Gutter Classes
- `.g-0`: Removes all gutters (spacing between columns).
- `.gx-0`: Removes horizontal gutters.
- `.gy-0`: Removes vertical gutters.

 Gutter Spacing Classes
- `.g-*`: Sets both horizontal and vertical gutter spacing, where `*` is a number from 1 to 5 (e.g., `.g-3`).
- `.gx-*`: Sets horizontal gutter spacing.
- `.gy-*`: Sets vertical gutter spacing.

# ------------------------------- Example Usage ------------------------------ #

Here is an example demonstrating the use of various grid classes in Bootstrap 5:

html:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap Grid Classes Example</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container">
    <div class="row">
      <div class="col-12 col-md-8">Main Content</div>
      <div class="col-6 col-md-4">Sidebar</div>
    </div>
    <div class="row">
      <div class="col-6 col-sm-4">Column 1</div>
      <div class="col-6 col-sm-4">Column 2</div>
      <div class="col-6 col-sm-4">Column 3</div>
    </div>
    <div class="row">
      <div class="col-6 offset-3">Centered Column</div>
    </div>
    <div class="row">
      <div class="col order-last">First in HTML, last in order</div>
      <div class="col">Second in order</div>
      <div class="col order-first">Last in HTML, first in order</div>
    </div>
  </div>
</body>
</html>
//////////////////////////////////////////////


# -------------------------------- Explanation ------------------------------- #

1. Basic Grid Layout: The first row uses `.col-12` and `.col-md-8` to create a responsive layout where the main content spans 12 columns on small screens and 8 columns on medium screens and up. The sidebar spans 6 columns on small screens and 4 columns on medium screens and up.

2. Responsive Columns: The second row demonstrates responsive columns that adjust their widths at different breakpoints using `.col-6` and `.col-sm-4`.

3. Offset Columns: The third row uses `.offset-3` to center the column by offsetting it by 3 columns.

4. Column Ordering: The fourth row demonstrates column ordering using `.order-last`, `.order-first`, and default order classes.

These grid classes provide a flexible and powerful system for creating responsive layouts in your Bootstrap 5 projects.